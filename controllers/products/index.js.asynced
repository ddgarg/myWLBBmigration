'use strict';


var IndexModel  = require('../../models/index');
var amazon      = require('../../lib/apac').OperationHelper;
var util        = require('util');
var request       = require('request');
var cheerio       = require('cheerio');
var async = require('async');

var amazonProductNotMatchedError = 'AWS.ECommerceService.NoExactMatches';

module.exports = function (router) {

    var model = new IndexModel();


    router.post('/addtowl', function(req, res) {
        console.log(req.body.asin);
        res.send({'response': 'OK'});
    });

    function amazonCaller(amazonHelper, searchQuery, res, callback) {

    var d = new Date();
    console.log('amazonCallertartTime');
    console.log(d.getTime());
        console.time('amazonCaller');

        amazonHelper.execute('ItemSearch', {
                'SearchIndex': 'All',
                'Keywords': searchQuery,
                'ResponseGroup': 'ItemAttributes,Offers,Images'
            }, function (results,  onAmazonError) {


                var amazonRequest = results.ItemSearchResponse.Items[0].Request[0];

                if (amazonRequest.hasOwnProperty('Errors'))
                {
                    callback(null);
                }
                else {
                      formatAmazonResponse(results, res, callback);
                }
            }
        );
    }

    function amazonCallerResult(callback, result)
    {
        var d = new Date();
        console.log('amazonCallerResultStartTime');
        console.log(d.getTime());

        var callAmazonAgain = false;
        if(typeof result.amazonCaller == 'undefined')
        {
            callAmazonAgain = true;
            callback(null,callAmazonAgain);
        }
        else
        {
            callback(null, callAmazonAgain);
        }

    }

    var googleSuggestedQuery = function(searchQuery, callback){
        var d = new Date();
        console.log('googleSuggestedQueryStartTime');
        console.log(d.getTime());

        console.time('google-request');

        request('https://www.google.co.in/search?q='+ searchQuery, function (error, response, html) {
            if (!error && response.statusCode == 200) {
                var $ = cheerio.load(html);
                var showingMessage   = $('a.spell').attr('href');

                if(typeof showingMessage ==  'undefined')
                {
                    console.timeEnd('google-request');
                        callback(null);
                }
                else {
                    console.timeEnd('google-request');
                    var suggestedSearchQuery = showingMessage.match(/q=(.*?)\&/)[1].replace(/\+/g,' ');
                    callback(null, suggestedSearchQuery);
                }
            }
        });
    };

    function googleAmazonCaller(amazonHelper, res, callback, results) {

        var d = new Date();
        console.log('googleAmazonCallerStartTime');
        console.log(d.getTime());
        console.time('googleAmazonCaller');

        if(typeof results.googleSuggestedQuery == 'undefined' || !results.amazonCallerResult)
//        if(typeof results.googleSuggestedQuery == 'undefined')
        {
            console.timeEnd('googleAmazonCaller');
            callback(null);
        }
        else
        {
            amazonCaller(amazonHelper, results.googleSuggestedQuery, res, callback);
        }
    }

    router.post('/searchproducts', function(req, res) {
        console.time('getproducts');
        var searchQuery = req.body.name;
        var amazonConfig = req.app.kraken.get('amazon-config');
        var amazonHelper = new amazon (amazonConfig);

        var tasks = {
            amazonCaller            : async.apply(amazonCaller, amazonHelper, searchQuery, res),
            googleSuggestedQuery    : async.apply(googleSuggestedQuery, searchQuery),
            amazonCallerResult      : ['amazonCaller', amazonCallerResult],
            googleAmazonCaller      : ['googleSuggestedQuery', 'amazonCallerResult', async.apply(googleAmazonCaller, amazonHelper, res)]
        };

        async.auto(tasks, function onDone(err, result) {
            if (err) {
                return console.log('error: ' + JSON.stringify(err));
                res.send({error:'error'});
            }

//            if(typeof result.amazonCaller !=  'undefined'){
//                console.timeEnd('getproducts');
//                res.send(result.amazonCaller);
//            }
//            else if(typeof result.googleAmazonCaller !=  'undefined')
//            {
//                console.timeEnd('getproducts');
//                res.send(result.googleAmazonCaller);
//            }
//            else
//            {
                if(typeof result.amazonCaller == 'undefined' && typeof result.googleAmazonCaller == 'undefined')
                {
                    console.timeEnd('getproducts');
                    res.send({error:'error'});
                }
//            }
        });
    });

    var formatAmazonResponse = function(amazonRes, res, callback){

        var amazonItems = amazonRes.ItemSearchResponse.Items[0];
        var formattedResponse = [{}];
        var item;
        for(item = 0 ; item < amazonItems.Item.length; item ++)
        {
            var finalItem = {};
            finalItem.asin     =    amazonItems.Item[item].ASIN[0];
            finalItem.item_link =   amazonItems.Item[item].DetailPageURL[0];
            finalItem.item_image=   amazonItems.Item[item].ImageSets[0].ImageSet[0].MediumImage[0].URL[0];
            if (amazonItems.Item[item].OfferSummary && amazonItems.Item[item].OfferSummary[0].LowestNewPrice)
            {
                finalItem.price =       amazonItems.Item[item].OfferSummary[0].LowestNewPrice[0].FormattedPrice[0];
            }
            finalItem.item_title =  amazonItems.Item[item].ItemAttributes[0].Title[0];
            formattedResponse.push(finalItem);
        }
        var productArray = {'products': formattedResponse};
//      console.log(productArray);

        res.send(productArray);
        console.timeEnd('amazonCaller');
        callback(null, productArray);
    };
};
